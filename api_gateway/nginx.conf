server {
    listen 80;

    # Internal location for authentication requests
    location = /auth {
        internal;
        proxy_pass http://user_api:8000/api/users/validate;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header Authorization $http_authorization;
    }

    # Public endpoints that do not require authentication
    location /api/users/login {
        proxy_pass http://user_api:8000/api/users/login;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/users/signup {
        proxy_pass http://user_api:8000/api/users/signup;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Catch-all for user service, can be used for other non-protected user routes
    location /api/users/ {
        auth_request /auth;
        auth_request_set $user_email $upstream_http_x_user_email;
        proxy_set_header X-User-Email $user_email;

        proxy_pass http://user_api:8000/api/users/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Protected services
    location /api/events/ {
        auth_request /auth;
        auth_request_set $user_email $upstream_http_x_user_email;
        proxy_set_header X-User-Email $user_email;

        proxy_pass http://event_api:8003/api/events/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/reservations/ {
        auth_request /auth;
        auth_request_set $user_email $upstream_http_x_user_email;
        proxy_set_header X-User-Email $user_email;

        proxy_pass http://reservation_api:8001/api/reservations/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/orders/ {
        auth_request /auth;
        auth_request_set $user_email $upstream_http_x_user_email;
        proxy_set_header X-User-Email $user_email;

        proxy_pass http://order_service:8002/api/orders/;
    }

    location /api/allocations/ {
        auth_request /auth;
        auth_request_set $user_email $upstream_http_x_user_email;
        proxy_set_header X-User-Email $user_email;

        proxy_pass http://allocation_service:8004/api/allocations/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /redpanda-admin/ {
        proxy_pass http://kafka:9644/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check for the API Gateway itself
    location / {
        return 200 "API Gateway is running";
        add_header Content-Type text/plain;
    }
}
